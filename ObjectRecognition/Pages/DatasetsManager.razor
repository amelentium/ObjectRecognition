@page "/datasets"

@using System.IO;
@using System.Web;
@using System.Collections;

@inject IWebHostEnvironment HostEnvironment;

<PageTitle>Datasets</PageTitle>

<h3>Dataset Manager</h3>
<div>
    <button class="btn btn-primary"
            @onclick=ShowAddDialog>
        Create
    </button>
    <button class="btn btn-danger"
            @onclick=ShowDeleteDialog
            disabled=@String.IsNullOrEmpty(SelectedDataset)>
        Delete
    </button>
</div>
<div class="row">
    <div class="col-md-4" style="margin-bottom: 16px">
        <DatasetsTree Datasets="@Datasets"
                      SelectedDataset="@SelectedDataset"
                      OnDatasetChange="@DatasetChange" />
    </div>
    <div class="col-md-8" style="margin-bottom: 16px">
        <DatasetImageManager Images="@Images"/>
    </div>
</div>
<AddDialog @ref="AddDialog" />
<DeleteDialog @ref="DeleteDialog" />

@code {
    private const string DatasetsRootPath = "images\\data_sets";
    private string DatasetsPath;
    private List<string> Datasets;
    private string SelectedDataset;
    private AddDialog AddDialog;
    private DeleteDialog DeleteDialog;

    private List<string> Images = new List<string>();

    protected override void OnInitialized()
    {
        DatasetsPath = Path.Combine(HostEnvironment.WebRootPath, DatasetsRootPath);
        Datasets = Directory.EnumerateDirectories(DatasetsPath)
                        .Select(x => new DirectoryInfo(x).Name)
                        .ToList();
    }

    private void DatasetChange(TreeEventArgs args)
    {
        SelectedDataset = args.Value as string;

        LoadFiles();
    }

    private void LoadFiles()
    {
        Images = new List<string>();

        if (!string.IsNullOrEmpty(SelectedDataset))
        {
            try
            {
                var datasetPath = Path.Combine(DatasetsPath, SelectedDataset);

                Images.AddRange(Directory.GetFiles(datasetPath)
                                .Select(x => x.Replace(HostEnvironment.WebRootPath, string.Empty)));
            }
            catch
            {
                Directory.CreateDirectory(Path.Combine(HostEnvironment.WebRootPath, DatasetsRootPath));
            }
        }
    }

    private void ShowAddDialog()
    {
        AddDialog.Show("dataset", AddDataset);
    }

    private void AddDataset(string datasetName)
    {
        Directory.CreateDirectory(Path.Combine(DatasetsPath, datasetName));
        Datasets.Add(datasetName);
        Images = new List<string>();
        SelectedDataset = datasetName;
        StateHasChanged();
    }

    private void ShowDeleteDialog()
    {
        DeleteDialog.Show($"{SelectedDataset} dataset", DeleteDataset, SelectedDataset);
    }

    private void DeleteDataset(string datasetName)
    {
        Directory.Delete(Path.Combine(DatasetsPath, datasetName), true);
        Datasets.Remove(datasetName);
        Images = new List<string>();
        SelectedDataset = null;
        StateHasChanged();
    }
}